So I had a flash of inspiration, which was that perhaps RTKit can only deal with 16K aligned buffers, as that's the only difference between the two logs. And it turns out, that was indeed the problem. Rounding up buffer requests to multiples of 16K (the first buffer already started at a multiple of 16K) fixes the problem and allows RTKit to complete init like Linux. The new problem is that NVMe init then hangs...

kettenis posits that this is because syslog messages are not being read. Can u-boot read them on a timer or something? Or receive a mailbox interrupt? "There is, and has always been, a very basic design decision, that U-Boot is strictly single-tasking". So, no? It was alluded to that the rtkit processor can deadlock if its messages do not get read in time. But there is a "board_poll_devices" function.

Let's double check that syslogs not being read is actually the problem. What happens if we increase the timeout a lot and receive all the messages? We get no messages. So something is still wrong somewhere. Either the real NVMe stuff needs to be initialized so there are things to talk about, or something is still going wrong during the rtkit initialization. I am still suspicious of the coalescing of SART slots, especially since rtkit seems sensitive to addresses. Let's try to disable that. It didn't help.

sven suggested to try not sending the 0xB command to set the AP power state, and that seemed to actually solve the problem!!! Now to see how much of the other changes I can get away with removing, and test to make sure this actually works for real. Removing nothing, and it crashes. Oops. But it seemed to boot from the usb, let's try that again? No, but I seem to recall I had tried to deinit and init with u-boot before I booted the USB, so let's try that? Nope. I must have accidentally not initialized nvme when I tested with USB, as linux just claims it crashes now. But not actually sending that 0xb message to set the AP power state on shut down either seems to fix the problem for good.

Now it's time to garbage collect my patches and rebase on kettenis' latest commits. But then this NVMe problem should be solved! I ended up removing some of the patches to make the rtkit init more like linux, but I guess we'll see if that ends up being a problem.
